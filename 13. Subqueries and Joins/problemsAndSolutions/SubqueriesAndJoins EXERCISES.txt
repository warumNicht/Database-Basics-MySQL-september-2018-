1.	Employee Address
SELECT e.employee_id,e.job_title,e.address_id,a.address_text
FROM employees AS e
JOIN addresses AS a ON e.address_id=a.address_id
ORDER BY e.address_id LIMIT 5;

2.	Addresses with Towns
SELECT e.first_name,e.last_name,t.name AS town, a.address_text
FROM employees AS e
JOIN addresses AS a ON a.address_id=e.address_id
JOIN towns AS t ON t.town_id=a.town_id
ORDER BY e.first_name,e.last_name LIMIT 5;

3.	Sales Employee
//   100/100
SELECT e.employee_id,e.first_name,e.last_name , d.name AS department_name
FROM employees AS e
JOIN departments AS d ON e.department_id=d.department_id 
WHERE d.name='Sales'
ORDER BY e.employee_id DESC;
//   33/100????
SELECT e.employee_id,e.first_name,e.last_name , d.name AS department_name
FROM employees AS e
JOIN departments AS d ON e.department_id=d.department_id 
WHERE d.department_id=3
ORDER BY e.employee_id DESC;

4.	Employee Departments
SELECT e.employee_id,e.first_name,e.salary , d.name AS department_name
FROM employees AS e
JOIN departments AS d ON e.department_id=d.department_id 
WHERE e.salary>15000
ORDER BY d.department_id DESC LIMIT 5;

5.	Employees Without Project 
66/100
SELECT DISTINCT e.employee_id,e.first_name
FROM employees AS e
INNER JOIN employees_projects AS p ON e.employee_id!=p.employee_id
ORDER BY e.employee_id DESC LIMIT 3;
100/100
SELECT  e.employee_id,e.first_name
FROM employees AS e
LEFT JOIN employees_projects AS p ON e.employee_id=p.employee_id
WHERE ISNULL(p.employee_id)
ORDER BY e.employee_id DESC LIMIT 3;

6.	Employees Hired After
100/100
SELECT  e.first_name,e.last_name,e.hire_date, d.name AS dept_name
FROM employees AS e
JOIN departments AS d ON e.department_id=d.department_id
WHERE DATE(e.hire_date) >'1999-01-01' AND (d.name ='Sales' OR d.name ='Finance')
ORDER BY e.hire_date;
0/100
SELECT  e.first_name,e.last_name,e.hire_date, d.name
FROM employees AS e
JOIN departments AS d ON e.department_id=d.department_id
WHERE DATE(e.hire_date) >'1999-01-01' AND d.department_id IN(3,10)
ORDER BY e.hire_date;

7.	Employees with Project
SELECT  e.employee_id,e.first_name,pr.name AS project_name
FROM employees AS e
JOIN employees_projects AS p ON e.employee_id=p.employee_id
JOIN projects AS pr ON p.project_id=pr.project_id
WHERE DATE(pr.start_date)>'2002-08-13' AND pr.end_date IS NULL
ORDER BY e.first_name,pr.name LIMIT 5;

8.	Employee 24
SELECT  e.employee_id,e.first_name,
IF(YEAR(pr.start_date)>=2005, NULL,pr.name )AS project_name
FROM employees AS e
JOIN employees_projects AS p ON e.employee_id=p.employee_id
JOIN projects AS pr ON p.project_id=pr.project_id
WHERE e.employee_id=24
ORDER BY project_name;

9.	Employee Manager
SELECT  e.employee_id,e.first_name,e.manager_id,m.first_name AS manager_name
FROM employees AS e
JOIN employees AS m ON e.manager_id=m.employee_id
WHERE m.employee_id IN (3,7)
ORDER BY e.first_name;

10.	Employee Summary
SELECT  e.employee_id,CONCAT(e.first_name,' ',e.last_name) AS employee_name,
CONCAT(m.first_name,' ',m.last_name) AS manager_name, d.name AS department_name
FROM employees AS e
JOIN employees AS m ON e.manager_id=m.employee_id
JOIN departments AS d ON e.department_id=d.department_id
ORDER BY e.employee_id LIMIT 5;


11.	Min Average Salary
SELECT AVG(e.salary) AS `min_average_salary`
FROM employees AS e
GROUP BY e.department_id
ORDER BY `min_average_salary` LIMIT 1;

12.	Highest Peaks in Bulgaria
SELECT mc.country_code, m.mountain_range,p.peak_name,p.elevation
FROM mountains_countries AS mc
JOIN mountains AS m ON mc.mountain_id=m.id
JOIN peaks AS p ON p.mountain_id=m.id
WHERE mc.country_code='BG' AND p.elevation>2835
ORDER BY p.elevation DESC;

13.	Count Mountain Ranges
SELECT mc.country_code, COUNT(mc.country_code) AS mountain_range
FROM mountains_countries AS mc
JOIN mountains AS m ON mc.mountain_id=m.id
WHERE mc.country_code IN('BG','RU','US') 
GROUP BY mc.country_code
ORDER BY mountain_range DESC;

14.	Countries with Rivers
SELECT c.country_name,r.river_name
FROM countries AS c
LEFT JOIN countries_rivers AS cr ON cr.country_code=c.country_code
LEFT JOIN rivers AS r ON r.id=cr.river_id
WHERE c.continent_code='AF'
ORDER BY c.country_name LIMIT 5;

15.	*Continents and Currencies
SELECT d1.continent_code, d1.currency_code, d1.currency_usage FROM 
(SELECT c.continent_code,c.currency_code,  COUNT(c.currency_code) AS currency_usage
FROM countries AS c
GROUP BY c.continent_code,c.currency_code
HAVING currency_usage>1 ) AS d1
LEFT JOIN
(SELECT c.continent_code,c.currency_code,  COUNT(c.currency_code) AS currency_usage
FROM countries AS c
GROUP BY c.continent_code,c.currency_code
HAVING currency_usage>1 ) AS d2

ON d1.continent_code=d2.continent_code AND d1.currency_usage<d2.currency_usage
WHERE d2.currency_usage IS NULL

ORDER BY d1.continent_code,d1.currency_code;


16.	Countries without any Mountains
SELECT COUNT( c.country_code) AS country_count
FROM countries AS c 
LEFT JOIN mountains_countries AS m ON c.country_code=m.country_code
WHERE m.country_code IS NULL;

17.	Highest Peak and Longest River by Country
SELECT c.country_name,
( SELECT MAX(p.elevation)
FROM mountains_countries  AS mc

JOIN peaks AS p ON p.mountain_id=mc.mountain_id
WHERE mc.country_code=c.country_code

) AS highest_peak_elevation,
( SELECT MAX(r.length)
FROM countries_rivers  AS cr

JOIN rivers AS r ON r.id=cr.river_id
WHERE cr.country_code=c.country_code

) AS longest_river_length

FROM countries AS c
ORDER BY highest_peak_elevation DESC, longest_river_length DESC
LIMIT 5;


