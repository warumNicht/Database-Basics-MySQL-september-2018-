1.	One-To-One Relationship
CREATE TABLE persons(
`person_id` INT PRIMARY KEY AUTO_INCREMENT,
`first_name` VARCHAR(20) NOT NULL,
`salary` DECIMAL(8,2),
`passport_id` INT UNIQUE  NOT NULL
);

CREATE TABLE passports(
`passport_id` INT PRIMARY KEY,
`passport_number` VARCHAR(30) UNIQUE NOT NULL
);

INSERT INTO persons (`first_name`, `salary`, `passport_id`) VALUES 
('Roberto', 43300,102),
('Tom', 56100,103),
('Yana', 60200,101);
INSERT INTO passports ( `passport_id`, `passport_number`) VALUES 
(101, 'N34FG21B'),
(102, 'K65LO4R7'),
(103, 'ZE657QP2');
ALTER TABLE persons
ADD CONSTRAINT `fk_person_passport_id`
FOREIGN KEY persons(`passport_id`) REFERENCES passports(`passport_id`);

2.	One-To-Many Relationship
CREATE TABLE manufacturers(
`manufacturer_id` INT PRIMARY KEY AUTO_INCREMENT,
`name` VARCHAR(30) NOT NULL UNIQUE,
`established_on` DATE NOT NULL
);
CREATE TABLE models(
`model_id` INT NOT NULL,
`name` VARCHAR(30) NOT NULL,
`manufacturer_id` INT NOT NULL
);

ALTER TABLE models
ADD CONSTRAINT PK_models
PRIMARY KEY (`model_id`),
ADD CONSTRAINT u_models
UNIQUE  (`name`),
ADD CONSTRAINT fk_model_manufacturer
FOREIGN KEY (manufacturer_id) REFERENCES manufacturers(manufacturer_id);

INSERT INTO manufacturers (name, established_on) VALUES 
('BMW', '1916-03-01'),
('Tesla', '2003-01-01'),
('Lada', '1966-05-01');

INSERT INTO models (model_id, name, manufacturer_id) VALUES 
(101, 'X1',1),
(102, 'i6',1),
(103, 'Model S',2),
(104, 'Model X',2),
(105, 'Model 3',2),
(106, 'Nova',3);

3.	Many-To-Many Relationship

CREATE TABLE students(
`student_id` INT PRIMARY KEY AUTO_INCREMENT,
`name` VARCHAR(30) NOT NULL
);
CREATE TABLE exams(
`exam_id` INT PRIMARY KEY,
`name` VARCHAR(30) NOT NULL
);

CREATE TABLE students_exams(
`student_id` INT NOT NULL,
`exam_id` INT  NOT NULL
);
INSERT INTO students ( name) VALUES ('Mila'),
('Toni'), ('Ron');
INSERT INTO exams ( exam_id, name) VALUES (101,'Spring MVC'),
(102, 'Neo4j'), (103,'Oracle 11g');
INSERT INTO students_exams ( student_id,exam_id) VALUES 
(1, 101),
(1, 102),
(2, 101),
(3, 103),
(2, 102),
(2, 103);

ALTER TABLE students_exams 
ADD CONSTRAINT `stud_keys`
PRIMARY KEY (student_id,exam_id);

ALTER TABLE students_exams 
ADD CONSTRAINT `fk_student_id`
FOREIGN KEY students_exams (student_id ) REFERENCES students(student_id),
ADD CONSTRAINT `fk_exam_id`
FOREIGN KEY students_exams (exam_id ) REFERENCES exams (exam_id);

4.	Self-Referencing
CREATE TABLE teachers (
`teacher_id` INT PRIMARY KEY,
`name` VARCHAR(30) NOT NULL,
`manager_id` INT
);
INSERT INTO teachers (teacher_id, name, manager_id) VALUES 
(101,'John', NULL),
(102,'Maya', 106),
(103,'Silvia', 106),
(104,'Ted', 105),
(105,'Mark', 101),
(106,'Greta', 101);

ALTER TABLE teachers
ADD CONSTRAINT `fk_teacher_manager`
FOREIGN KEY teachers(manager_id) REFERENCES teachers(teacher_id);


5.	Online Store Database
CREATE TABLE `item_types`
(`item_type_id` INT (11) PRIMARY KEY AUTO_INCREMENT,
`name` VARCHAR (50) NOT NULL);
CREATE TABLE `items`
(`item_id` INT (11) PRIMARY KEY AUTO_INCREMENT,
`name` VARCHAR (50) NOT NULL,
`item_type_id` INT(11) NOT NULL);
ALTER TABLE items
ADD CONSTRAINT `fk_items_item_type`
FOREIGN KEY items(`item_type_id`) REFERENCES item_types(item_type_id);

CREATE TABLE `order_items`
(`order_id` INT (11) NOT NULL,
`item_id` INT (11) NOT NULL);
ALTER TABLE order_items
ADD CONSTRAINT `pk_orders`
PRIMARY KEY (order_id, item_id);

CREATE TABLE orders(
`order_id` INT(11) PRIMARY KEY AUTO_INCREMENT,
`customer_id` INT(11) NOT NULL
);
ALTER TABLE order_items
ADD CONSTRAINT `fk_order_item`
FOREIGN KEY order_items(item_id) REFERENCES items (item_id),
ADD CONSTRAINT `fk_order_order`
FOREIGN KEY order_items(order_id) REFERENCES orders (order_id);

CREATE TABLE customers(
`customer_id` INT(11) PRIMARY KEY AUTO_INCREMENT,
`name` VARCHAR(50) NOT NULL,
`birthday` DATE,
`city_id` INT(11) NOT NULL
);
CREATE TABLE cities(
`city_id` INT(11)  PRIMARY KEY AUTO_INCREMENT,
`name` VARCHAR(50) NOT NULL
);
ALTER TABLE orders
ADD CONSTRAINT `fk_customer_id`
FOREIGN KEY orders(`customer_id`) REFERENCES customers(`customer_id`);
ALTER TABLE customers
ADD CONSTRAINT `fk_customer_city_id`
FOREIGN KEY customers(`city_id`) REFERENCES cities(`city_id`);


6.	University Database
CREATE TABLE subjects(
`subject_id` INT(11) PRIMARY KEY AUTO_INCREMENT,
`subject_name` VARCHAR(50) NOT NULL
);
CREATE TABLE agenda(
`student_id` INT(11) ,
`subject_id` INT(11)
);
ALTER TABLE agenda
ADD CONSTRAINT `pk_agenda`
PRIMARY KEY(`student_id`,`subject_id`);
CREATE TABLE students
(`student_id` INT(11) PRIMARY KEY AUTO_INCREMENT,
`student_number` VARCHAR(12) NOT NULL,
`student_name` VARCHAR(50) NOT NULL,
`major_id` INT(11) NOT NULL);
ALTER TABLE agenda
ADD CONSTRAINT `fk_agenda_student_id`
FOREIGN KEY agenda(`student_id`) REFERENCES students(`student_id`),
ADD CONSTRAINT `fk_agenda_subject_id`
FOREIGN KEY agenda(`subject_id`) REFERENCES subjects(`subject_id`);

CREATE TABLE payments(
`payment_id` INT(11) PRIMARY KEY AUTO_INCREMENT,
`payment_date` DATE NOT NULL,
`payment_amount` DECIMAL(8,2) NOT NULL,
`student_id` INT(11) NOT NULL
);
ALTER TABLE payments
ADD CONSTRAINT `fk_payment_student_id`
FOREIGN KEY payments(`student_id`) REFERENCES students(`student_id`);
CREATE TABLE majors(
`major_id` INT(11) PRIMARY KEY AUTO_INCREMENT,
`name` VARCHAR(50) NOT NULL
);
ALTER TABLE students
ADD CONSTRAINT `fk_student_major_id`
FOREIGN KEY students(`major_id`) REFERENCES majors(`major_id`);

9.	Peaks in Rila
SELECT m.mountain_range, p.peak_name, p.elevation
FROM mountains AS m
JOIN peaks AS p ON m.id=p.mountain_id
WHERE m.mountain_range='Rila'
ORDER BY p.elevation DESC;